{"version":3,"file":"static/js/209.7ad68449.chunk.js","mappings":"qTAmIA,EAtHe,WACb,IAAMA,GAAYC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMF,SAAS,IAClDG,GAAQF,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,KAAK,IAC1CC,GAAUH,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAME,OAAO,IAC9CC,GAAQJ,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMG,KAAK,IAChDC,GAAwBC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACdI,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjBC,GAAkDT,EAAAA,EAAAA,UAAS,CACzDU,QAAS,GACTC,SAAU,KACVC,GAAAV,EAAAA,EAAAA,GAAAO,EAAA,GAHKI,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GAKxCG,EAAiB,SAACC,GACtB,IAAMC,EAAQD,EAAEE,OAAOD,MACvBH,GAAoBK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACjBN,GAAiB,IAAAO,EAAAA,EAAAA,GAAA,GACnBJ,EAAEE,OAAOG,KAAOJ,IAErB,EAEMK,EAAc,SAACC,EAAOC,GACX,cAAXA,GAGJpB,GAAQ,EACV,GAOAqB,EAAAA,EAAAA,YAAU,YACJ3B,GAASD,IACXO,GAAQ,GAENR,GACF8B,YAAW,WACTZ,EAAqB,CACnBJ,QAAS,GACTC,SAAU,KAEZgB,aAAaC,QAAQ,QAAShC,GAC9BS,EAAS,aACX,GAAG,IAEP,GAAG,CAACT,EAAOE,EAAOD,IAElB,IAAMgC,EAAQC,EAAAA,YAAiB,SAAeC,EAAOC,GACnD,OAAOC,EAAAA,EAAAA,KAACC,EAAAA,GAAQf,EAAAA,EAAAA,GAAA,CAACgB,UAAW,EAAGH,IAAKA,EAAKI,QAAQ,UAAaL,GAChE,IAEA,OACEM,EAAAA,EAAAA,MAAA,OAAKC,GAAG,qBAAoBC,SAAA,EAC1BN,EAAAA,EAAAA,KAAA,OAAKK,GAAG,iBAAgBC,UACtBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,gBAENN,EAAAA,EAAAA,KAAA,OAAKK,GAAG,YAAWC,UACjBF,EAAAA,EAAAA,MAACG,EAAAA,EAAW,CAAAD,SAAA,EACVN,EAAAA,EAAAA,KAAA,OAAAM,UACEN,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CACRC,GAAI,CAAEC,EAAG,EAAGC,MAAO,QACnBC,KAAK,OACLP,GAAG,iBACHQ,MAAM,WACNzB,KAAK,UACLJ,MAAOJ,EAAkBH,QACzBqC,SAAUhC,EACViC,UAAQ,OAGZf,EAAAA,EAAAA,KAAA,OAAAM,UACEN,EAAAA,EAAAA,KAACQ,EAAAA,EAAS,CACRC,GAAI,CAAEC,EAAG,EAAGC,MAAO,QACnBC,KAAK,WACLP,GAAG,iBACHQ,MAAM,WACNzB,KAAK,WACLJ,MAAOJ,EAAkBF,SACzBoC,SAAUhC,EACViC,UAAQ,OAGZf,EAAAA,EAAAA,KAAA,OAAKK,GAAG,eAAcC,UACpBN,EAAAA,EAAAA,KAACgB,EAAAA,EAAM,CACLb,QAAQ,YACRc,KAAK,QACLR,GAAI,CAAEC,EAAG,EAAGC,MAAO,OAAQO,OAAQ,QACnCC,QA7DS,SAACpC,GACpBA,EAAEqC,iBACF9C,GAAS+C,EAAAA,EAAAA,IAAWzC,GACtB,EA0DkC0B,SACvB,kBAMPN,EAAAA,EAAAA,KAAA,OAAKK,GAAG,gBAAeC,SAAE9C,IAAawC,EAAAA,EAAAA,KAACsB,EAAAA,EAAM,MAC3CzD,GAUDmC,EAAAA,EAAAA,KAACuB,EAAAA,EAAQ,CAACrD,KAAMA,EAAMsD,iBAAkB,IAAMC,QAASpC,EAAYiB,UAChEN,EAAAA,EAAAA,KAACJ,EAAK,CAAC8B,SAAS,QAAQD,QAASpC,EAAaoB,GAAI,CAAEE,MAAO,QAASL,SACjEzC,OAZImC,EAAAA,EAAAA,KAACuB,EAAAA,EAAQ,CAACrD,KAAMA,EAAMsD,iBAAkB,IAAMC,QAASpC,EAAYiB,UAC1EN,EAAAA,EAAAA,KAACJ,EAAK,CACJ8B,SAAS,UACTD,QAASpC,EACToB,GAAI,CAAEE,MAAO,QAASL,SAErB1C,QAYb,C","sources":["Components/SignIn/SignIn.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signInUser } from \"../../Redux/Action/action\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport \"./signin.css\";\r\n\r\nconst SignIn = () => {\r\n  const isLoading = useSelector((state) => state.isLoading)\r\n  const token = useSelector((state) => state.token);\r\n  const message = useSelector((state) => state.message);\r\n  const error = useSelector((state) => state.error);\r\n  const [open, setOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const [newUserFormDetail, setNewUserFormDetail] = useState({\r\n    emailId: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleOnChange = (e) => {\r\n    const value = e.target.value;\r\n    setNewUserFormDetail({\r\n      ...newUserFormDetail,\r\n      [e.target.name]: value,\r\n    });\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(signInUser(newUserFormDetail));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if( error || message ) {\r\n      setOpen(true);\r\n    }\r\n    if (token) {\r\n      setTimeout(() => {\r\n        setNewUserFormDetail({\r\n          emailId: \"\",\r\n          password: \"\",\r\n        });\r\n        localStorage.setItem(\"token\", token);\r\n        navigate(\"/dashboard\");\r\n      }, 1000);\r\n    }\r\n  }, [token, error, message]);\r\n\r\n  const Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n  });\r\n\r\n  return (\r\n    <div id=\"userFormContainers\">\r\n      <div id=\"headContainers\">\r\n        <h1> SignIn </h1>\r\n      </div>\r\n      <div id=\"container\">\r\n        <FormControl>\r\n          <div >\r\n            <TextField\r\n              sx={{ m: 1, width: \"40ch\" }}\r\n              type=\"text\"\r\n              id=\"standard-basic\"\r\n              label=\"Email-Id\"\r\n              name=\"emailId\"\r\n              value={newUserFormDetail.emailId}\r\n              onChange={handleOnChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              sx={{ m: 1, width: \"40ch\" }}\r\n              type=\"password\"\r\n              id=\"standard-basic\"\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              value={newUserFormDetail.password}\r\n              onChange={handleOnChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div id=\"btnContainer\">\r\n            <Button\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              sx={{ m: 1, width: \"40ch\", height: '55px' }}\r\n              onClick={handleSubmit}\r\n            >\r\n              Login\r\n            </Button>\r\n          </div>\r\n        </FormControl>\r\n      </div>\r\n      <div id=\"loadContainer\">{isLoading && <Loader />}</div>\r\n      {!error ? (<Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\r\n          <Alert\r\n            severity=\"success\"\r\n            onClose={handleClose}\r\n            sx={{ width: \"100%\" }}\r\n          >\r\n            {message}\r\n          </Alert>\r\n        </Snackbar>\r\n      ) :\r\n      (<Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\r\n          <Alert severity=\"error\" onClose={handleClose} sx={{ width: \"100%\" }}>\r\n            {error}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n"],"names":["isLoading","useSelector","state","token","message","error","_useState","useState","_useState2","_slicedToArray","open","setOpen","navigate","useNavigate","dispatch","useDispatch","_useState3","emailId","password","_useState4","newUserFormDetail","setNewUserFormDetail","handleOnChange","e","value","target","_objectSpread","_defineProperty","name","handleClose","event","reason","useEffect","setTimeout","localStorage","setItem","Alert","React","props","ref","_jsx","MuiAlert","elevation","variant","_jsxs","id","children","FormControl","TextField","sx","m","width","type","label","onChange","required","Button","size","height","onClick","preventDefault","signInUser","Loader","Snackbar","autoHideDuration","onClose","severity"],"sourceRoot":""}